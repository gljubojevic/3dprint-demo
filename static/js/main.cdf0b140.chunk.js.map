{"version":3,"sources":["theme.js","ui/AppTools.js","ui/DrawerMenu.js","editor/View3D.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","AppTools","AppBar","position","Toolbar","variant","IconButton","edge","color","onClick","this","props","toggleDrawer","Typography","Component","defaultProps","DrawerMenu","bind","toggleElement","save","state","isOpen","e","type","key","setState","console","error","name","target","visible","checked","availableElements","map","el","index","FormControlLabel","label","control","Switch","onChange","Drawer","anchor","open","onClose","Box","p","component","Divider","List","ListItem","ListItemButton","ListItemIcon","ListItemText","primary","FormControl","FormLabel","FormGroup","renderSwitches","View3D","refRenderer","React","createRef","animate","loaderOk","loaderError","loaderProgress","exporterSTL","STLExporter","scene","THREE","dirLight1","set","add","dirLight2","ambientLight","loader","GLTFLoader","ref","log","forSave","clone","remove","traverse","o","id","uuid","push","forEach","getObjectById","parent","parse","binary","camera","window","innerWidth","innerHeight","y","z","renderer","setSize","current","appendChild","domElement","controls","OrbitControls","listenToKeyEvents","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","Math","PI","update","object3D","load","undefined","requestAnimationFrame","render","aspect","updateProjectionMatrix","gltf","i","children","length","obj","includes","loadedObject","xhr","loaded","total","sc","App","elements","refDrawerMenu","refView3D","data","blob","Blob","saveAs","newElements","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","ThemeProvider","CssBaseline","enableColorScheme","document","getElementById"],"mappings":"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","file":"static/js/main.cdf0b140.chunk.js","sourcesContent":["import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n//\tpalette: {\n//\t\tprimary: {\n//\t\t\tmain: '#556cd6',\n//\t\t},\n//\t\tsecondary: {\n//\t\t\tmain: '#19857b',\n//\t\t},\n//\t\terror: {\n//\t\t\tmain: red.A400,\n//\t\t},\n//\t},\n});\n\nexport default theme;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nclass AppTools extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.props.toggleDrawer}>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">3D Print demo</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t);\n\t}\n}\n\nAppTools.defaultProps = {\n\ttoggleDrawer: null\n}\n\nAppTools.propTypes = {\n\ttoggleDrawer: PropTypes.func\n}\n\nexport default AppTools;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport Save from '@mui/icons-material/Save';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\n\nclass DrawerMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.toggleDrawer = this.toggleDrawer.bind(this);\n\t\tthis.toggleElement = this.toggleElement.bind(this);\n\t\tthis.save = this.save.bind(this);\n\t\tthis.state = {\n\t\t\tisOpen: false\n\t\t}\n\t}\n\n\ttoggleDrawer(e) {\n\t\tif (e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\t}\n\n\tsave() {\n\t\tif (null === this.props.save) {\n\t\t\tconsole.error(\"No save handler set\");\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ isOpen:false });\n\t\tthis.props.save();\n\t}\n\n\ttoggleElement(e) {\n\t\tthis.props.toggleElement({\n\t\t\tname: e.target.name,\n\t\t\tvisible: e.target.checked \n\t\t});\n\t}\n\n\trenderSwitches() {\n\t\treturn this.props.availableElements.map((el, index) => {\n\t\t\treturn (\n\t\t\t\t<FormControlLabel key={index} label={el.name}\n\t\t\t\t\tcontrol={<Switch checked={el.visible} onChange={this.toggleElement} name={el.name} />}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Drawer anchor=\"left\" open={this.state.isOpen} onClose={this.toggleDrawer}>\n\t\t\t\t<Box p={1}>\n\t\t\t\t\t<Typography variant=\"h4\" component=\"h4\">Main menu</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<List component=\"nav\" aria-label=\"main selector\">\n\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t<ListItemButton onClick={this.save}>\n\t\t\t\t\t\t\t\t<ListItemIcon><Save /></ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Save for print\" />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</List>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<FormControl component=\"fieldset\" variant=\"standard\">\n\t\t\t\t\t<FormLabel component=\"legend\">Elements on/off</FormLabel>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t{this.renderSwitches()}\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Box>\n\t\t\t</Drawer>\n\t\t);\n\t}\n}\n\nDrawerMenu.defaultProps = {\n\tsave: null,\n\tavailableElements: [],\n\ttoggleElement: null\n}\n\nDrawerMenu.propTypes = {\n\tsave: PropTypes.func,\n\tavailableElements: PropTypes.array,\n\ttoggleElement: PropTypes.func\n}\n\nexport default DrawerMenu;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as THREE from \"three\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { STLExporter } from 'three/examples/jsm/exporters/STLExporter.js';\n\nclass View3D extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.refRenderer = React.createRef();\n\t\t// methods\n\t\tthis.save = this.save.bind(this);\n\t\tthis.animate = this.animate.bind(this);\n\t\tthis.loaderOk = this.loaderOk.bind(this);\n\t\tthis.loaderError = this.loaderError.bind(this);\n\t\tthis.loaderProgress = this.loaderProgress.bind(this);\n\t\tthis.toggleElement = this.toggleElement.bind(this);\n\n\t\t// Init exporter\n\t\tthis.exporterSTL = new STLExporter();\n\n\t\t// Init default scene\n\t\tthis.scene = new THREE.Scene();\n\n\t\t// Add light\n\t\tthis.dirLight1 = new THREE.DirectionalLight( 0xffffff );\n\t\tthis.dirLight1.position.set( 1, 1, 1 );\n\t\tthis.scene.add( this.dirLight1 );\n\n\t\tthis.dirLight2 = new THREE.DirectionalLight( 0xffffff );\n\t\tthis.dirLight2.position.set( -1, -1, -1 );\n\t\tthis.scene.add( this.dirLight2 );\n\n\t\tthis.ambientLight = new THREE.AmbientLight( 0x222222 );\n\t\tthis.scene.add( this.ambientLight );\n\n\t\t// init object loader\n\t\tthis.loader = new GLTFLoader();\n\t}\n\n\t// just empty div to add renderer\n\trender() {\n\t\treturn (<div ref={this.refRenderer} />);\n\t}\n\n\t// extract scene and save object\n\tsave() {\n\t\tconsole.log(\"Saving object\");\n\t\t// clone scene to remove hidden\n\t\tlet forSave = this.scene.clone();\n\t\t// find invisible to remove\n\t\tlet remove = [];\n\t\tforSave.traverse(function(o){\n\t\t\tif (!o.visible) {\n\t\t\t\tconsole.log(\"To remove\", o.name, o.id, o.uuid);\n\t\t\t\tremove.push(o.id);\n\t\t\t}\n\t\t});\n\t\t// finally remove invisible\n\t\tremove.forEach(id => {\n\t\t\tlet o = forSave.getObjectById(id);\n\t\t\to.parent.remove(o);\n\t\t});\n\t\t// return cleaned\n\t\treturn this.exporterSTL.parse(forSave, {binary:true});\n\t}\n\n\t// init three.js renderer\n\tcomponentDidMount() {\n\t\tthis.camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 100 );\n\t\tthis.camera.position.y = 0.20;\n\t\tthis.camera.position.z = 0.10;\n\n\t\tthis.renderer = new THREE.WebGLRenderer();\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\n\t\t// use ref as a mount point of the Three.js scene instead of the document.body\n\t\tthis.refRenderer.current.appendChild( this.renderer.domElement );\n\n\t\t// controls\n\t\tthis.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\t\tthis.controls.listenToKeyEvents( window ); // optional\n\t\tthis.controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n\t\tthis.controls.dampingFactor = 0.05;\n\t\tthis.controls.screenSpacePanning = false;\n\t\tthis.controls.minDistance = 0.22;\n\t\tthis.controls.maxDistance = 2;\n\t\tthis.controls.maxPolarAngle = Math.PI / 2;\n\t\tthis.controls.target = new THREE.Vector3(0, 0.15, 0);\n\t\tthis.controls.update();\n\n\t\t// start animation\n\t\tthis.animate();\n\n\t\t// kickstart loading\n\t\tif (null === this.props.object3D) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loader.load(\n\t\t\tthis.props.object3D,\n\t\t\tthis.loaderOk,\n\t\t\tundefined, //this.loaderProgress,\n\t\t\tthis.loaderError\n\t\t);\n\t}\n\n\tanimate() {\n\t\trequestAnimationFrame( this.animate );\n\t\tthis.renderer.render( this.scene, this.camera );\n\t};\n\n\t// TODO: fix resizing \n\tonWindowResize() {\n\t\tthis.camera.aspect = window.innerWidth / window.innerHeight;\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\n\t}\n\n\t// called when object is loaded\n\tloaderOk(gltf) {\n\t\tconsole.log(\"Object loaded\");\n\t\t//this.scene.add( gltf.scene );\n\t\tlet el = [];\n\t\tfor (let i = 0; i < gltf.scene.children.length; i++) {\n\t\t\tlet obj = gltf.scene.children[i];\n\t\t\t//console.log(obj);\n\t\t\t//console.log(obj.name);\n\n\t\t\t// skip main model marked with \"-main\" in name\n\t\t\tif (obj.name.includes(\"-main\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// make non make element invisible\n\t\t\tobj.visible = false;\n\t\t\t// add to list for hide/show\n\t\t\tel.push({\n\t\t\t\tname: obj.name,\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t}\n\t\t//this.scene.add(gltf.scene);\n\t\tthis.loadedObject = gltf.scene;\n\t\tthis.scene.add(this.loadedObject);\n\n\t\t// Call changed list of models\n\t\tif (null !== this.props.availableElements) {\n\t\t\tthis.props.availableElements(el);\n\t\t}\n\t}\n\n\t// called while loading is progressing\n\tloaderProgress (xhr) {\n\t\tconsole.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n\t}\n\n\t// called when object load fails\n\tloaderError(error) {\n\t\tconsole.error(error);\n\t}\n\n\t// toggle visible element\n\t// check for traversing scene..\n\t// https://github.com/mrdoob/three.js/blob/dev/examples/jsm/exporters/STLExporter.js\n\ttoggleElement(el) {\n\t\tconsole.log(\"Toggle visible\", el);\n\t\tlet sc = this.loadedObject;\n\t\tfor (let i = 0; i < sc.children.length; i++) {\n\t\t\tif (sc.children[i].name === el.name) {\n\t\t\t\tsc.children[i].visible = el.visible;\n\t\t\t}\n\t\t}\n\t}\n}\n\nView3D.defaultProps = {\n\tobject3D: null,\n\tavailableElements: null\n}\n\nView3D.propTypes = {\n\tobject3D: PropTypes.string,\n\tavailableElements: PropTypes.func\n}\n\nexport default View3D;","import React, { Component } from 'react';\nimport AppTools from './ui/AppTools';\nimport DrawerMenu from './ui/DrawerMenu';\nimport View3D from './editor/View3D';\nimport { saveAs } from 'file-saver';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\telements: [],\n\t\t}\n\t\tthis.refDrawerMenu = React.createRef();\n\t\tthis.refView3D = React.createRef();\n\t\tthis.toggleDrawer = this.toggleDrawer.bind(this);\n\t\tthis.save = this.save.bind(this);\n\t\tthis.availableElements = this.availableElements.bind(this);\n\t\tthis.toggleElement = this.toggleElement.bind(this);\n\t}\n\n\ttoggleDrawer(e) {\n\t\tthis.refDrawerMenu.current.toggleDrawer(e);\n\t}\n\n\tsave() {\n\t\t// get data from scene\n\t\tlet data = this.refView3D.current.save();\n\t\t//console.log(\"Data for save ->\", data);\n\t\tlet blob = new Blob( [data], { type : 'application/octet-stream' } ); \n\t\tsaveAs(blob, \"for-print.stl\");\n\t}\n\n\t// Get list of elements to hide and show\n\tavailableElements(elements) {\n\t\tconsole.log(elements);\n\t\tthis.setState({elements:elements});\n\t}\n\n\ttoggleElement(el) {\n\t\tlet newElements = this.state.elements.map((e)=>{\n\t\t\tif (e.name === el.name) {\n\t\t\t\te.visible = el.visible;\n\t\t\t}\n\t\t\treturn e;\n\t\t});\n\t\tthis.setState({elements:newElements});\n\t\tthis.refView3D.current.toggleElement(el);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<AppTools toggleDrawer={this.toggleDrawer} />\n\t\t\t\t<DrawerMenu ref={this.refDrawerMenu} save={this.save} availableElements={this.state.elements} toggleElement={this.toggleElement} />\n\t\t\t\t<View3D ref={this.refView3D} object3D=\"objects/solider-demo.glb\" availableElements={this.availableElements} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline enableColorScheme />\n\t\t\t{/* The rest of your application */}\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}